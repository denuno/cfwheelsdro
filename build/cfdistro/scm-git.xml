<project name="scm-git" basedir="./" xmlns:antcontrib="antlib:net.sf.antcontrib">

	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="jgit @{command}" />
			<exec executable="git" dir="@{dir}" outputproperty="git.results">
				<arg value="@{command}" />
				<args />
			</exec>
<!--
            <java classname="org.eclipse.jgit.pgm.Main" classpathref="git.lib.path" fork="true" dir="${src.dir}">
				<arg value="@{command}" />
				<args />
            </java>
-->
			<echo message="${git.results}" />
		</sequential>
	</macrodef>
	
	<macrodef name="git-export">
		<attribute name="repository" />
		<attribute name="dest" />
		<sequential>
			<mkdir dir="@{dest}" />
			<git command="archive" dir="@{dest}">
				<args>
					<!-- <arg value="-a" /> -->
					<arg value="--format" />
					<arg value="zip" />
					<arg value="--output" />
					<arg value="src.zip" />
					<arg value="--remote" />
					<arg value="@{repository}" />
					<arg value="HEAD" />
					<arg value="-0" />
				</args>
			</git>
			<unzip src="@{dest}/src.zip" dest="@{dest}" />
			<delete file="@{dest}/src.zip"/>
		</sequential>
	</macrodef>

	<macrodef name="git-clone-pull">
		<attribute name="repository" />
		<attribute name="dest" />
		<sequential>
			<git command="clone">
				<args>
					<arg value="@{repository}" />
					<arg value="@{dest}" />
				</args>
			</git>
			<git command="pull" dir="@{dest}" />
		</sequential>
	</macrodef>

	<target name="src.import.git" depends="exists.src.xml">
		<xmltask sourcebuffer="src.buff">
			<call path="src/sources/src[@type='git']">
				<param name="dest" path="@dest" default="NONE" />
				<param name="type" path="@type" default="NONE" />
				<param name="uri" path="@uri" default="NONE" />
				<actions>
					<echo message="importing @{uri} to src: ${src.dir}/@{dest}" />
					<git-export repository="@{uri}" dest="${src.dir}/@{dest}" />
				</actions>
			</call>
		</xmltask>
	</target>

	<target name="project.update.git" unless="revisions.are.same">
		<xmltask sourcebuffer="src.buff">
			<call path="src/project/src[@type='git']">
				<param name="dest" path="@dest" default="NONE" />
				<param name="type" path="@type" default="NONE" />
				<param name="uri" path="@uri" default="NONE" />
				<actions>
					<echo message="importing src: ${src.dir}/@{dest}" />
					<git-clone-pull repository="@{uri}" dest="@{dest}" />
				</actions>
			</call>
		</xmltask>
	</target>

	<target name="check.project.for.newrevision.git">
		<xmltask sourcebuffer="src.buff">
			<call path="src/project/src[@type='git']">
				<param name="dest" path="@dest" default="NONE" />
				<param name="type" path="@type" default="NONE" />
				<param name="uri" path="@uri" default="NONE" />
				<actions>
					<git command="log">
						<args>
							<arg value="-n" />
							<arg value="1" />
							<arg value="@{repository}" />
						</args>
					</git>
				</actions>
			</call>
		</xmltask>
		<echo message="${git.results}" file="./git.current.rev.txt" />
		<condition property="revisions.are.same">
			<filesmatch file1="./git.current.rev.txt" file2="./git.last.rev.txt" textfile="true" />
		</condition>
		<antcontrib:if>
			<equals arg1="${revisions.are.same}" arg2="true" />
			<then>
				<echo message="Revisions are the same" />
			</then>
			<else>
				<echo message="Revisions differ" />
			</else>
		</antcontrib:if>
		<echo message="${git.results}" file="./git.last.rev.txt" />
	</target>

	<target name="exists.src.xml">
		<antcall target="cfdistro.exists.src.xml" />
	</target>
	
	
</project>