<project name="distro.build" default="build.localdev" basedir="./" xmlns:antcontrib="antlib:net.sf.antcontrib">

	<loadproperties srcfile="build.properties"/>
	<import file="/workspace/cfdistro/src/cfdistro/build.xml" />
	<!--
	<import file="./cfdistro/build.xml"/>
	 -->

	<target name="build.localdev" depends="src.to.mappings.xml, exists.src.dir">
		<!-- add mappings -->
		<!--
		<mapping physical="${basedir}/../../docs" virtual="/docs"/>
		-->
		<mapping physical="${basedir}/../test" virtual="/test"/>
		<mapping physical="${basedir}/../pub" virtual="/pub"/>
		<!-- add custom tags example
		<customtag physical="${src.dir}/cfdistro/ext/cfmltags/cfantrunner" virtual="/cfantrunner"/>
		 -->
		<!-- run cfdistro build -->
		<antcontrib:runtarget target="cfdistro.build.localdev" />
		<!-- use fileServlet to map external resources  -->
		<fileservlet servletname="fileServlet" directory="${src.dir}/../pub" urlpattern="/pub/*"/>
		<!-- add urlrewrite filter and rewrite rules -->
		<!-- getting "Failed to specify text in replace" means you need to escape & like so:  &amp;amp;-->
		<antcontrib:runtarget target="urlrewritefilter.servlet.install" />
<!--
		<urlrewritexml name="cfwheelsdro-rewites">
			<![CDATA[
			<rule match-type="regex">
				<condition type="request-uri" operator="notequal" next="and">/flex2gateway/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/jrunscripts/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/cfide/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/files/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/flash/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/images/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/javascripts/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/miscellaneous/*</condition>
				<condition type="request-uri" operator="notequal" next="and">/stylesheets/*</condition>

				<condition type="request-uri" operator="notequal" next="and">/robots.txt</condition>
				<condition type="request-uri" operator="notequal" next="and">/sitemap.xml</condition>
				<condition type="request-uri" operator="notequal" next="and">/404.shtml</condition>
				<condition type="request-uri" operator="notequal" next="and">/favicon.ico</condition>
				<from>^(.*)$</from>
				<to last="true">/cfwheels/rewrite.cfm?\$pathinfo=$1&amp;%{query-string}</to>
			</rule>
			]]>
		</urlrewritexml>
		<urlrewrite name="rootToPub" note="SERVE EVERYTHING FROM PUB"
			from="/(.*)" to="/pub/$1" type="forward"/>
		<urlrewriteout name="pubToRoot" from="^/pub/(.*)" to="/$1"/>
-->
		<urlrewriteout name="rootToContextPath" from="/(.*)" to="%{context-path}/$1" type="forward"/>
		<antcontrib:if>
			<or>
				<equals arg1="${default.cfengine}" arg2="acf" />
				<equals arg1="${default.cfengine}" arg2="obd" />
			</or>
			<then>
				<echo message="This CFML Engine can't run from a mapping, copying files to war root.${line.separator}
				Any 'live' development will have to be done to ${war.temp.dir}/cfwheels" />
				<copy todir="${war.temp.dir}/cfwheels" verbose="false">
					<fileset dir="${src.dir}/cfwheels" />
				</copy>
			</then>
			<else>
			</else>
		</antcontrib:if>
		<echo file="${war.temp.dir}/Application.cfc"><![CDATA[<cfcomponent output="false">
				<cfinclude template="/cfwheels/wheels/functions.cfm" />
			</cfcomponent>]]>
		</echo>
		<echo file="${war.temp.dir}/index.cfm"><![CDATA[<cfinclude template="/cfwheels/wheels/index.cfm" />]]>
		</echo>
	</target>

	<target name="run.tests" >
		<!--
		http://db.apache.org/ddlutils/ant/org.apache.ddlutils.task.DdlToDatabaseTask.html
		-->
		<!--
		already applied to git cfwheelsdro
		<apply-patch patchUrl="${patch.url}" patchlevel="1" patchdir="${src.dir}/cfwheels/"/>
		-->		
		
		<dsn-schema dsn="wheelstestdb" schemafile="dsndata.localdev.xml"/>
		<antcontrib:runtarget target="tests.start.run.stop" />
		<antcontrib:if>
			<equals arg1="${tests.results}" arg2="pass" />
			<then>
				<git command="push" dir="../">
					<args>
						<arg value="origin" />
						<arg value="master" />
					</args>
				</git>
			</then>
			<else>
				<echo message="tests failed, not pushing to origin master"/>
			</else>
		</antcontrib:if>
	</target>	

	<target name="data.import">
		<property name="build.type" value="localdev" />
		<!--
		http://db.apache.org/ddlutils/ant/org.apache.ddlutils.task.DdlToDatabaseTask.html
		-->
		<dsn-schema dsn="wheelstestdb" schemafile="dsndata.localdev.xml"/>
	</target>	

	<target name="data.export">
		<property name="build.type" value="localdev" />
		<!--
		http://db.apache.org/ddlutils/ant/org.apache.ddlutils.task.DdlToDatabaseTask.html
		-->
		<export-dsn dsn="wheelstestdb" schemafile="dsndata.localdev.xml"/>
	</target>	

	<!-- these are just here for the Eclipse Ant UI ordering -->
	<target name="build.localdev.start.launch">
		<antcontrib:runtarget target="cfdistro.build.localdev.start.launch" />
	</target>	

	<target name="build.localdev.start" depends="build.localdev">
		<antcontrib:runtarget target="runwar.start" />
	</target>	

	<target name="build.localdev.stop">
		<antcontrib:runtarget target="runwar.stop" />
	</target>	
	
	<target name="build.war.src" depends="compile-cf">
		<antcontrib:runtarget target="build.war.src" />
	</target>
</project>